buildscript {
    dependencies {
        classpath deps.build.intellijPlugin
    }
}

plugins {
    id "com.badoo.ribs.templategenerator"
}

apply plugin: "kotlin"
apply plugin: "org.jetbrains.intellij"

group "com.badoo.ribs"

repositories {
    mavenLocal()
}

templates {

    template {
        id = 'leaf_release_0.27'
        name = '[0.27] Leaf node'

        fromProject = project(':templates:release-0.27')
        sourcePackage = 'com.badoo.ribs.template.leaf'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'leaf_view_only_release_0.27'
        name = '[0.27] Leaf node (view only)'

        fromProject = project(':templates:release-0.27')
        sourcePackage = 'com.badoo.ribs.template.leaf_view_only'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_manual_di_release_0.27'
        name = '[0.27] Router node'

        fromProject = project(':templates:release-0.27')
        sourcePackage = 'com.badoo.ribs.template.node'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'leaf_snapshot'
        name = '[SNAPSHOT] Leaf node'

        fromProject = project(':templates:snapshot')
        sourcePackage = 'com.badoo.ribs.template.leaf'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'leaf_view_only_snapshot'
        name = '[SNAPSHOT] Leaf node (view only)'

        fromProject = project(':templates:snapshot')
        sourcePackage = 'com.badoo.ribs.template.leaf_view_only'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }

    template {
        id = 'router_node_manual_di_snapshot'
        name = '[SNAPSHOT] Router node'

        fromProject = project(':templates:snapshot')
        sourcePackage = 'com.badoo.ribs.template.node'
        modulePackage = 'com.badoo.ribs.template'
        resources = ['rib_foo_bar.xml']

        token {
            id = "rib_name"
            name = "RIB name"
            sourceValue = "FooBar"
        }
    }
}

dependencies {
    implementation deps.build.commonsLang
    implementation deps.android.annotations
    implementation deps.external.apacheCommons
    implementation deps.external.gson
    
    testImplementation deps.test.junitApi
    testImplementation deps.test.junitParams
    testRuntimeOnly deps.test.junitEngine
    testImplementation deps.test.junitVintage
    testImplementation deps.test.byteBuddy

    testImplementation deps.test.assertj
    testImplementation deps.test.mockitoKotlin
}

// Determines if the machine has Maven credentials.
def hasMavenCredentials() {
    return ext.hasProperty('mavenUser') && ext.hasProperty('mavenPassword')
}

ext.pluginXml = new XmlSlurper().parse(file("src/main/resources/META-INF/plugin.xml"))
version = pluginXml.version

buildSearchableOptions.enabled = false

// Disable compileKotlin task only on CI as Android Studio Artic Fox cannot be easily resolved
compileKotlin.enabled = System.getenv("CI") != "true"

intellij {
    plugins = ['android', deps.build.kotlinIdeaPlugin, 'java']
    // version = deps.versions.intellij
    localPath = '/Applications/Android Studio.app'
    updateSinceUntilBuild = false
    sandboxDir = "${project.gradle.gradleHomeDir}/caches/intellij"
    downloadSources = true

    // Uncomment to test against Android Studio
    // alternativeIdePath = '/Applications/Android Studio.app'
}

instrumentCode {
    compilerVersion = deps.versions.intellij
}

runPluginVerifier {
    localPaths = ["/Applications/Android Studio.app/Contents"]
}

task sourcesJar(type: Jar, dependsOn: classes) {
    getArchiveClassifier().set("sources")
    from sourceSets.main.allSource
}

afterEvaluate {
    artifacts {
        archives sourcesJar
        archives project.tasks.getByName("buildPlugin")
    }
}
