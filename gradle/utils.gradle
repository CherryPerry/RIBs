ext.configureAndroidLibrary = { project ->
    project.apply plugin: 'com.android.library'
    project.apply plugin: 'kotlin-android'
    project.apply plugin: 'kotlin-android-extensions'
    configureAndroidModule(project)
}

ext.configureAndroidApp = { project ->
    project.apply plugin: 'com.android.application'
    project.apply plugin: 'kotlin-android'
    project.apply plugin: 'kotlin-android-extensions'
    configureAndroidModule(project)
}

ext.configureDetektForAllSubprojects = { Project project ->
    project.subprojects {
        afterEvaluate { subProject ->
            if (subProject.plugins.hasPlugin("kotlin") || subProject.plugins.hasPlugin("kotlin-android")) {
                subProject.apply plugin: "io.gitlab.arturbosch.detekt"

                subProject.detekt {
                    parallel = true
                    input = files("${subProject.projectDir}/src/")
                    config = files("${project.rootDir}/detekt.yml")

                    def baselineFile = file("${subProject.projectDir}/detekt-baseline.xml")
                    baseline = baselineFile
                }
            }
        }
    }
}

ext.junitTestImplementation = { project ->
    project.dependencies {
        testImplementation deps.test.junitApi
        testImplementation deps.test.junitParams
        testRuntimeOnly deps.test.junitEngine
        testImplementation deps.test.junitVintage
    }
}

ext.junitAndroidTestImplementation = { project ->
    project.dependencies {
        androidTestImplementation deps.test.junit4
    }
}

ext.junitImplementation = { project ->
    project.dependencies {
        implementation deps.test.junitApi
        implementation deps.test.junitParams
        implementation deps.test.junitEngine
        implementation deps.test.junitVintage
    }
}

private def configureAndroidModule(Project project) {
    project.android {
        compileSdkVersion deps.build.compileSdkVersion

        defaultConfig {
            minSdkVersion deps.build.minSdkVersion
            targetSdkVersion deps.build.targetSdkVersion
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            multiDexEnabled true
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        testOptions.unitTests.includeAndroidResources = true

        project.afterEvaluate {
            project.android.kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8.toString()
        }
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }
}
