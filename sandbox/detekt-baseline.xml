<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>EmptyFunctionBlock:BlockerView.kt$BlockerViewImpl${ }</ID>
    <ID>EmptyFunctionBlock:DialogExampleInteractorTest.kt$DialogExampleInteractorTest${ }</ID>
    <ID>EmptyFunctionBlock:DialogExampleRouterTest.kt$DialogExampleRouterTest${ }</ID>
    <ID>EmptyFunctionBlock:FooBarInteractorTest.kt$FooBarInteractorTest${ }</ID>
    <ID>EmptyFunctionBlock:LoremIpsumInteractorTest.kt$LoremIpsumInteractorTest${ }</ID>
    <ID>EmptyFunctionBlock:LoremIpsumView.kt$LoremIpsumViewImpl${ }</ID>
    <ID>EmptyFunctionBlock:PortalOverlayTestView.kt$PortalOverlayTestViewImpl${ }</ID>
    <ID>ForbiddenImport:CompiledWorkflowTest.kt$import org.junit.Rule</ID>
    <ID>ForbiddenImport:CompiledWorkflowTest.kt$import org.junit.Test</ID>
    <ID>ForbiddenImport:DialogExampleInteractorTest.kt$import org.junit.After</ID>
    <ID>ForbiddenImport:DialogExampleInteractorTest.kt$import org.junit.Before</ID>
    <ID>ForbiddenImport:DialogExampleInteractorTest.kt$import org.junit.Test</ID>
    <ID>ForbiddenImport:DialogExampleRouterTest.kt$import org.junit.After</ID>
    <ID>ForbiddenImport:DialogExampleRouterTest.kt$import org.junit.Before</ID>
    <ID>ForbiddenImport:DialogExampleRouterTest.kt$import org.junit.Test</ID>
    <ID>ForbiddenImport:DialogExampleRouterTest.kt$import org.junit.runner.RunWith</ID>
    <ID>ForbiddenImport:DialogExampleTest.kt$import org.junit.Rule</ID>
    <ID>ForbiddenImport:DialogExampleTest.kt$import org.junit.Test</ID>
    <ID>ForbiddenImport:FooBarInteractorTest.kt$import org.junit.After</ID>
    <ID>ForbiddenImport:FooBarInteractorTest.kt$import org.junit.Before</ID>
    <ID>ForbiddenImport:FooBarInteractorTest.kt$import org.junit.Test</ID>
    <ID>ForbiddenImport:HelloWorldTest.kt$import org.junit.Rule</ID>
    <ID>ForbiddenImport:HelloWorldTest.kt$import org.junit.Test</ID>
    <ID>ForbiddenImport:HelloWorldTestDeferred.kt$import org.junit.Rule</ID>
    <ID>ForbiddenImport:HelloWorldTestDeferred.kt$import org.junit.Test</ID>
    <ID>ForbiddenImport:LoremIpsumInteractorTest.kt$import org.junit.After</ID>
    <ID>ForbiddenImport:LoremIpsumInteractorTest.kt$import org.junit.Before</ID>
    <ID>ForbiddenImport:LoremIpsumInteractorTest.kt$import org.junit.Test</ID>
    <ID>ForbiddenImport:LoremIpsumTest.kt$import org.junit.Rule</ID>
    <ID>ForbiddenImport:LoremIpsumTest.kt$import org.junit.Test</ID>
    <ID>ForbiddenImport:MainScreenTest.kt$import org.junit.Before</ID>
    <ID>ForbiddenImport:MainScreenTest.kt$import org.junit.Test</ID>
    <ID>ForbiddenImport:MainScreenTest.kt$import org.junit.runner.RunWith</ID>
    <ID>ForbiddenImport:MenuFeatureTest.kt$import org.junit.Test</ID>
    <ID>ForbiddenImport:MenuRibTest.kt$import org.junit.Before</ID>
    <ID>ForbiddenImport:MenuRibTest.kt$import org.junit.Test</ID>
    <ID>ForbiddenImport:MenuRibTest.kt$import org.junit.runner.RunWith</ID>
    <ID>ForbiddenImport:MenuTest.kt$import org.junit.Rule</ID>
    <ID>ForbiddenImport:MenuTest.kt$import org.junit.Test</ID>
    <ID>ForbiddenImport:MenuViewTest.kt$import org.junit.Before</ID>
    <ID>ForbiddenImport:MenuViewTest.kt$import org.junit.Rule</ID>
    <ID>ForbiddenImport:MenuViewTest.kt$import org.junit.Test</ID>
    <ID>ForbiddenImport:SwitcherInteractorTest.kt$import org.junit.Before</ID>
    <ID>ForbiddenImport:SwitcherInteractorTest.kt$import org.junit.Test</ID>
    <ID>ForbiddenImport:SwitcherInteractorTest.kt$import org.junit.runner.RunWith</ID>
    <ID>ForbiddenImport:SwitcherRouterTest.kt$import org.junit.Before</ID>
    <ID>ForbiddenImport:SwitcherRouterTest.kt$import org.junit.Test</ID>
    <ID>FunctionNaming:MainScreenTest.kt$MainScreenTest$@Test fun openHelloSectionAndClickButton_displaysReturnedDataFromActivity()</ID>
    <ID>FunctionNaming:MainScreenTest.kt$MainScreenTest$@Test fun openHelloSectionAndClickButton_launchesActivity()</ID>
    <ID>FunctionNaming:MenuRibTest.kt$MenuRibTest$@Test fun itemClickUiEvent_producesSelectOutput()</ID>
    <ID>FunctionNaming:MenuRibTest.kt$MenuRibTest$@Test fun selectItemInputTwoTimes_viewModelContainsOnlyLastSelection()</ID>
    <ID>FunctionNaming:MenuRibTest.kt$MenuRibTest$@Test fun selectItemInput_selectsItem()</ID>
    <ID>FunctionNaming:MenuTest.kt$MenuTest$@Test fun clickOnItem_doesNotSelectItem()</ID>
    <ID>FunctionNaming:MenuTest.kt$MenuTest$@Test fun initialState_noSelectedElements()</ID>
    <ID>FunctionNaming:MenuTest.kt$MenuTest$@Test fun itemClick_producesSelectOutput()</ID>
    <ID>FunctionNaming:MenuTest.kt$MenuTest$@Test fun selectItemInputTwoTimes_displaysOnlyLastSelection()</ID>
    <ID>FunctionNaming:MenuTest.kt$MenuTest$@Test fun selectItemInput_selectsItem()</ID>
    <ID>FunctionNaming:MenuViewTest.kt$MenuViewTest$@Test fun bindViewModelTwoTimes_displaysOnlyLastSelection()</ID>
    <ID>FunctionNaming:MenuViewTest.kt$MenuViewTest$@Test fun clickOnItem_doesNotSelectItem()</ID>
    <ID>FunctionNaming:MenuViewTest.kt$MenuViewTest$@Test fun emptySelectItem_noSelectedElements()</ID>
    <ID>FunctionNaming:MenuViewTest.kt$MenuViewTest$@Test fun itemClick_producesSelectOutput()</ID>
    <ID>FunctionNaming:MenuViewTest.kt$MenuViewTest$@Test fun viewModelWithSelectedItem_selectsItem()</ID>
    <ID>LibraryCodeMustSpecifyReturnType:BigChildBuilders.kt$BigChildBuilders$val small = SmallBuilder(subtreeDeps)</ID>
    <ID>LibraryCodeMustSpecifyReturnType:DialogExampleChildBuilders.kt$DialogExampleChildBuilders$val loremIpsum = LoremIpsumBuilder(subtreeDeps)</ID>
    <ID>LibraryCodeMustSpecifyReturnType:HelloWorldChildBuilders.kt$HelloWorldChildBuilders$val small = SmallBuilder(subtreeDeps)</ID>
    <ID>LibraryCodeMustSpecifyReturnType:OtherActivity.kt$OtherActivity.Companion$const val KEY_INCOMING = "incoming"</ID>
    <ID>LibraryCodeMustSpecifyReturnType:OtherActivity.kt$OtherActivity.Companion$const val KEY_RETURNED_DATA = "foo"</ID>
    <ID>LibraryCodeMustSpecifyReturnType:RootActivity.kt$RootActivity$override fun createRib(savedInstanceState: Bundle?)</ID>
    <ID>LibraryCodeMustSpecifyReturnType:SmallChildBuilders.kt$SmallChildBuilders$val big = BigBuilder(subtreeDeps)</ID>
    <ID>LibraryCodeMustSpecifyReturnType:SmallChildBuilders.kt$SmallChildBuilders$val portalOverlay = PortalOverlayTestBuilder(subtreeDeps)</ID>
    <ID>LibraryCodeMustSpecifyReturnType:SwitcherChildBuilders.kt$SwitcherChildBuilders$val blocker = BlockerBuilder(subtreeDeps)</ID>
    <ID>LibraryCodeMustSpecifyReturnType:SwitcherChildBuilders.kt$SwitcherChildBuilders$val composeParent = ComposeParentBuilder(subtreeDeps)</ID>
    <ID>LibraryCodeMustSpecifyReturnType:SwitcherChildBuilders.kt$SwitcherChildBuilders$val dialogExample = DialogExampleBuilder( subtreeDeps )</ID>
    <ID>LibraryCodeMustSpecifyReturnType:SwitcherChildBuilders.kt$SwitcherChildBuilders$val fooBar = FooBarBuilder(subtreeDeps)</ID>
    <ID>LibraryCodeMustSpecifyReturnType:SwitcherChildBuilders.kt$SwitcherChildBuilders$val helloWorld = HelloWorldBuilder(subtreeDeps)</ID>
    <ID>LibraryCodeMustSpecifyReturnType:SwitcherChildBuilders.kt$SwitcherChildBuilders$val menu = MenuBuilder(subtreeDeps)</ID>
    <ID>LongParameterList:SwitcherRouter.kt$SwitcherRouter$( buildParams: BuildParams&lt;Nothing?&gt;, routingSource: RoutingSource&lt;Configuration&gt;, transitionHandler: TransitionHandler&lt;Configuration&gt;? = null, private val builders: SwitcherChildBuilders, private val dialogLauncher: DialogLauncher, private val dialogToTestOverlay: DialogToTestOverlay )</ID>
    <ID>NewLineAtEndOfFile:RxExtensions.kt$com.badoo.ribs.sandbox.rib.util.RxExtensions.kt</ID>
    <ID>NotImplementedDeclaration:InputToWish.kt$InputToWish$TODO("Implement FooBarInputToWish mapping")</ID>
    <ID>NotImplementedDeclaration:InputToWish.kt$InputToWish$TODO("Implement HelloWorldInputToWish mapping")</ID>
    <ID>NotImplementedDeclaration:NewsToOutput.kt$NewsToOutput$TODO("Implement FooBarNewsToOutput mapping")</ID>
    <ID>NotImplementedDeclaration:NewsToOutput.kt$NewsToOutput$TODO("Implement HelloWorldNewsToOutput mapping")</ID>
    <ID>NotImplementedDeclaration:TestPermissionRequester.kt$TestPermissionRequester$TODO()</ID>
    <ID>NotImplementedDeclaration:ViewEventToWish.kt$ViewEventToWish$TODO("Implement FooBarViewEventToWish mapping")</ID>
    <ID>NotImplementedDeclaration:ViewEventToWish.kt$ViewEventToWish$TODO("Implement HelloWorldViewEventToWish mapping")</ID>
  </CurrentIssues>
</SmellBaseline>
